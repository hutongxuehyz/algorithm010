class Solution {
    public int climbStairs(int n) {
        if (n == 1) {
            return 1;
        }
        int first = 1;
        int second = 2;
        for (int i = 3; i <= n; i++) {
            int third = first + second;
            first = second;
            second = third;
        }
        return second;
    }
}




class Solution {
    public HashMap<Integer,Integer> hashmap = new HashMap<>();

    public int climbStairs(int n) {

        return climb(n);
        
    }

    public int climb(int n){
        if(hashmap.keySet().contains(n)){
            return hashmap.get(n);
        }
        if(n == 1){
            return 1;
        }else if(n == 2){
            return 2;
        }
        hashmap.put(n,climb(n - 1) + climb(n - 2));
        return hashmap.get(n);
    }


}